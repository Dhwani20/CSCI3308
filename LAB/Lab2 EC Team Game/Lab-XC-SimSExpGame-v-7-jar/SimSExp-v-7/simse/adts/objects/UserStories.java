/* File generated by: simse.codegenerator.stategenerator.ADTGenerator */
package simse.adts.objects;
public class UserStories extends Artifact implements Cloneable
{
private String name;
private double numuserstoriesspecified;
private String prioritized;
private double numuserstoriesimplemented;
private double specificationcompleteness;
private double implementationcompleteness;
private double numuserstoriesintegrated;
private double numusintegratedbeginningofiteration;
private double percenterroneous;
private double percenterroneousbeginningofiteration;

public UserStories(String n0, double n1, String p2, double n3, double s4, double i5, double n6, double n7, double p8, double p9)
{
setName(n0);
setNumUserStoriesSpecified(n1);
setPrioritized(p2);
setNumUserStoriesImplemented(n3);
setSpecificationCompleteness(s4);
setImplementationCompleteness(i5);
setNumUserStoriesIntegrated(n6);
setNumUSIntegratedBeginningOfIteration(n7);
setPercentErroneous(p8);
setPercentErroneousBeginningOfIteration(p9);
}

public Object clone() {
UserStories cl = (UserStories)(super.clone());
cl.name = name;
cl.numuserstoriesspecified = numuserstoriesspecified;
cl.prioritized = prioritized;
cl.numuserstoriesimplemented = numuserstoriesimplemented;
cl.specificationcompleteness = specificationcompleteness;
cl.implementationcompleteness = implementationcompleteness;
cl.numuserstoriesintegrated = numuserstoriesintegrated;
cl.numusintegratedbeginningofiteration = numusintegratedbeginningofiteration;
cl.percenterroneous = percenterroneous;
cl.percenterroneousbeginningofiteration = percenterroneousbeginningofiteration;
return cl;
}

public String getName()
{
return name;
}

public void setName(String a)
{
name = a;
}

public double getNumUserStoriesSpecified()
{
return numuserstoriesspecified;
}

public void setNumUserStoriesSpecified(double a)
{
if(a < 0.0)
{
numuserstoriesspecified = 0.0;
}
else if(a > 80.0)
{
numuserstoriesspecified = 80.0;
}
else
{
numuserstoriesspecified = a;
}
}

public String getPrioritized()
{
return prioritized;
}

public void setPrioritized(String a)
{
prioritized = a;
}

public double getNumUserStoriesImplemented()
{
return numuserstoriesimplemented;
}

public void setNumUserStoriesImplemented(double a)
{
if(a < 0.0)
{
numuserstoriesimplemented = 0.0;
}
else if(a > 80.0)
{
numuserstoriesimplemented = 80.0;
}
else
{
numuserstoriesimplemented = a;
}
}

public double getSpecificationCompleteness()
{
return specificationcompleteness;
}

public void setSpecificationCompleteness(double a)
{
if(a < 0.0)
{
specificationcompleteness = 0.0;
}
else if(a > 100.0)
{
specificationcompleteness = 100.0;
}
else
{
specificationcompleteness = a;
}
}

public double getImplementationCompleteness()
{
return implementationcompleteness;
}

public void setImplementationCompleteness(double a)
{
if(a < 0.0)
{
implementationcompleteness = 0.0;
}
else if(a > 100.0)
{
implementationcompleteness = 100.0;
}
else
{
implementationcompleteness = a;
}
}

public double getNumUserStoriesIntegrated()
{
return numuserstoriesintegrated;
}

public void setNumUserStoriesIntegrated(double a)
{
if(a < 0.0)
{
numuserstoriesintegrated = 0.0;
}
else if(a > 80.0)
{
numuserstoriesintegrated = 80.0;
}
else
{
numuserstoriesintegrated = a;
}
}

public double getNumUSIntegratedBeginningOfIteration()
{
return numusintegratedbeginningofiteration;
}

public void setNumUSIntegratedBeginningOfIteration(double a)
{
if(a < 0.0)
{
numusintegratedbeginningofiteration = 0.0;
}
else if(a > 80.0)
{
numusintegratedbeginningofiteration = 80.0;
}
else
{
numusintegratedbeginningofiteration = a;
}
}

public double getPercentErroneous()
{
return percenterroneous;
}

public void setPercentErroneous(double a)
{
if(a < 0.0)
{
percenterroneous = 0.0;
}
else if(a > 100.0)
{
percenterroneous = 100.0;
}
else
{
percenterroneous = a;
}
}

public double getPercentErroneousBeginningOfIteration()
{
return percenterroneousbeginningofiteration;
}

public void setPercentErroneousBeginningOfIteration(double a)
{
if(a < 0.0)
{
percenterroneousbeginningofiteration = 0.0;
}
else if(a > 100.0)
{
percenterroneousbeginningofiteration = 100.0;
}
else
{
percenterroneousbeginningofiteration = a;
}
}

}