/* File generated by: simse.codegenerator.stategenerator.ADTGenerator */
package simse.adts.objects;
public class TheProject extends Project implements Cloneable
{
private String name;
private int currentiteration;
private boolean iterationstarted;
private boolean userstorieschosenforthisiteration;
private boolean programmingtasksassignedthisiteration;
private boolean iterationplanningmeetingstarted;
private int acceptancetestscreatedthisiteration;
private int unittestscreatedthisiteration;
private boolean robertandjoycepairprogthisiteration;
private boolean timothyandredapairprogthisiteration;
private boolean pegandsigfreidopairprogthisiteration;
private int numactivitiesoccurring;
private boolean acceptancetesting;
private int timesincelastrelease;
private boolean customercomplaining;
private double score;
private int timeelapsed;
private boolean releasemadethisiteration;
private int timeallotted;

public TheProject(String n0, int c1, boolean i2, boolean u3, boolean p4, boolean i5, int a6, int u7, boolean r8, boolean t9, boolean p10, int n11, boolean a12, int t13, boolean c14, double s15, int t16, boolean r17, int t18)
{
setName(n0);
setCurrentIteration(c1);
setIterationStarted(i2);
setUserStoriesChosenForThisIteration(u3);
setProgrammingTasksAssignedThisIteration(p4);
setIterationPlanningMeetingStarted(i5);
setAcceptanceTestsCreatedThisIteration(a6);
setUnitTestsCreatedThisIteration(u7);
setRobertAndJoycePairProgThisIteration(r8);
setTimothyAndRedaPairProgThisIteration(t9);
setPegAndSigfreidoPairProgThisIteration(p10);
setNumActivitiesOccurring(n11);
setAcceptanceTesting(a12);
setTimeSinceLastRelease(t13);
setCustomerComplaining(c14);
setScore(s15);
setTimeElapsed(t16);
setReleaseMadeThisIteration(r17);
setTimeAllotted(t18);
}

public Object clone() {
TheProject cl = (TheProject)(super.clone());
cl.name = name;
cl.currentiteration = currentiteration;
cl.iterationstarted = iterationstarted;
cl.userstorieschosenforthisiteration = userstorieschosenforthisiteration;
cl.programmingtasksassignedthisiteration = programmingtasksassignedthisiteration;
cl.iterationplanningmeetingstarted = iterationplanningmeetingstarted;
cl.acceptancetestscreatedthisiteration = acceptancetestscreatedthisiteration;
cl.unittestscreatedthisiteration = unittestscreatedthisiteration;
cl.robertandjoycepairprogthisiteration = robertandjoycepairprogthisiteration;
cl.timothyandredapairprogthisiteration = timothyandredapairprogthisiteration;
cl.pegandsigfreidopairprogthisiteration = pegandsigfreidopairprogthisiteration;
cl.numactivitiesoccurring = numactivitiesoccurring;
cl.acceptancetesting = acceptancetesting;
cl.timesincelastrelease = timesincelastrelease;
cl.customercomplaining = customercomplaining;
cl.score = score;
cl.timeelapsed = timeelapsed;
cl.releasemadethisiteration = releasemadethisiteration;
cl.timeallotted = timeallotted;
return cl;
}

public String getName()
{
return name;
}

public void setName(String a)
{
name = a;
}

public int getCurrentIteration()
{
return currentiteration;
}

public void setCurrentIteration(int a)
{
if(a < 0)
{
currentiteration = 0;
}
else
{
currentiteration = a;
}
}

public boolean getIterationStarted()
{
return iterationstarted;
}

public void setIterationStarted(boolean a)
{
iterationstarted = a;
}

public boolean getUserStoriesChosenForThisIteration()
{
return userstorieschosenforthisiteration;
}

public void setUserStoriesChosenForThisIteration(boolean a)
{
userstorieschosenforthisiteration = a;
}

public boolean getProgrammingTasksAssignedThisIteration()
{
return programmingtasksassignedthisiteration;
}

public void setProgrammingTasksAssignedThisIteration(boolean a)
{
programmingtasksassignedthisiteration = a;
}

public boolean getIterationPlanningMeetingStarted()
{
return iterationplanningmeetingstarted;
}

public void setIterationPlanningMeetingStarted(boolean a)
{
iterationplanningmeetingstarted = a;
}

public int getAcceptanceTestsCreatedThisIteration()
{
return acceptancetestscreatedthisiteration;
}

public void setAcceptanceTestsCreatedThisIteration(int a)
{
if(a < 0)
{
acceptancetestscreatedthisiteration = 0;
}
else if(a > 1)
{
acceptancetestscreatedthisiteration = 1;
}
else
{
acceptancetestscreatedthisiteration = a;
}
}

public int getUnitTestsCreatedThisIteration()
{
return unittestscreatedthisiteration;
}

public void setUnitTestsCreatedThisIteration(int a)
{
if(a < 0)
{
unittestscreatedthisiteration = 0;
}
else if(a > 1)
{
unittestscreatedthisiteration = 1;
}
else
{
unittestscreatedthisiteration = a;
}
}

public boolean getRobertAndJoycePairProgThisIteration()
{
return robertandjoycepairprogthisiteration;
}

public void setRobertAndJoycePairProgThisIteration(boolean a)
{
robertandjoycepairprogthisiteration = a;
}

public boolean getTimothyAndRedaPairProgThisIteration()
{
return timothyandredapairprogthisiteration;
}

public void setTimothyAndRedaPairProgThisIteration(boolean a)
{
timothyandredapairprogthisiteration = a;
}

public boolean getPegAndSigfreidoPairProgThisIteration()
{
return pegandsigfreidopairprogthisiteration;
}

public void setPegAndSigfreidoPairProgThisIteration(boolean a)
{
pegandsigfreidopairprogthisiteration = a;
}

public int getNumActivitiesOccurring()
{
return numactivitiesoccurring;
}

public void setNumActivitiesOccurring(int a)
{
if(a < 0)
{
numactivitiesoccurring = 0;
}
else
{
numactivitiesoccurring = a;
}
}

public boolean getAcceptanceTesting()
{
return acceptancetesting;
}

public void setAcceptanceTesting(boolean a)
{
acceptancetesting = a;
}

public int getTimeSinceLastRelease()
{
return timesincelastrelease;
}

public void setTimeSinceLastRelease(int a)
{
if(a < 0)
{
timesincelastrelease = 0;
}
else
{
timesincelastrelease = a;
}
}

public boolean getCustomerComplaining()
{
return customercomplaining;
}

public void setCustomerComplaining(boolean a)
{
customercomplaining = a;
}

public double getScore()
{
return score;
}

public void setScore(double a)
{
if(a < 0.0)
{
score = 0.0;
}
else if(a > 100.0)
{
score = 100.0;
}
else
{
score = a;
}
}

public int getTimeElapsed()
{
return timeelapsed;
}

public void setTimeElapsed(int a)
{
if(a < 0)
{
timeelapsed = 0;
}
else
{
timeelapsed = a;
}
}

public boolean getReleaseMadeThisIteration()
{
return releasemadethisiteration;
}

public void setReleaseMadeThisIteration(boolean a)
{
releasemadethisiteration = a;
}

public int getTimeAllotted()
{
return timeallotted;
}

public void setTimeAllotted(int a)
{
if(a < 0)
{
timeallotted = 0;
}
else
{
timeallotted = a;
}
}

}