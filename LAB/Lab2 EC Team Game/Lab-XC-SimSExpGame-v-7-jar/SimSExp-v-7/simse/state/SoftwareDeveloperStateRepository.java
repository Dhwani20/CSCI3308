/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class SoftwareDeveloperStateRepository implements Cloneable
{
private Vector <SoftwareDeveloper> softwaredevelopers;

public SoftwareDeveloperStateRepository()
{
softwaredevelopers = new Vector<SoftwareDeveloper>();
}

public Object clone() {
try {
SoftwareDeveloperStateRepository cl = (SoftwareDeveloperStateRepository) super.clone();
Vector<SoftwareDeveloper> clonedsoftwaredevelopers = new Vector<SoftwareDeveloper>();
for (int i = 0; i < softwaredevelopers.size(); i++) {
clonedsoftwaredevelopers.addElement((SoftwareDeveloper)(softwaredevelopers.elementAt(i).clone()));
}
cl.softwaredevelopers = clonedsoftwaredevelopers;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(SoftwareDeveloper a)
{
boolean add = true;
for(int i=0; i<softwaredevelopers.size(); i++)
{
SoftwareDeveloper softwaredeveloper = softwaredevelopers.elementAt(i);
if(softwaredeveloper.getName().equals(a.getName()))
{
add = false;
break;
}
}
if(add)
{
softwaredevelopers.add(a);
}
}

public SoftwareDeveloper get(String name)
{
for(int i=0; i<softwaredevelopers.size(); i++)
{
if(softwaredevelopers.elementAt(i).getName().equals(name))
{
return softwaredevelopers.elementAt(i);
}
}
return null;
}

public Vector<SoftwareDeveloper> getAll()
{
return softwaredevelopers;
}

public boolean remove(SoftwareDeveloper a)
{
return softwaredevelopers.remove(a);
}
}