/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class CRCCardsStateRepository implements Cloneable
{
private Vector <CRCCards> crccardss;

public CRCCardsStateRepository()
{
crccardss = new Vector<CRCCards>();
}

public Object clone() {
try {
CRCCardsStateRepository cl = (CRCCardsStateRepository) super.clone();
Vector<CRCCards> clonedcrccardss = new Vector<CRCCards>();
for (int i = 0; i < crccardss.size(); i++) {
clonedcrccardss.addElement((CRCCards)(crccardss.elementAt(i).clone()));
}
cl.crccardss = clonedcrccardss;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(CRCCards a)
{
boolean add = true;
for(int i=0; i<crccardss.size(); i++)
{
CRCCards crccards = crccardss.elementAt(i);
if(crccards.getDescription().equals(a.getDescription()))
{
add = false;
break;
}
}
if(add)
{
crccardss.add(a);
}
}

public CRCCards get(String description)
{
for(int i=0; i<crccardss.size(); i++)
{
if(crccardss.elementAt(i).getDescription().equals(description))
{
return crccardss.elementAt(i);
}
}
return null;
}

public Vector<CRCCards> getAll()
{
return crccardss;
}

public boolean remove(CRCCards a)
{
return crccardss.remove(a);
}
}