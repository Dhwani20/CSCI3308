/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class UserStoriesStateRepository implements Cloneable
{
private Vector <UserStories> userstoriess;

public UserStoriesStateRepository()
{
userstoriess = new Vector<UserStories>();
}

public Object clone() {
try {
UserStoriesStateRepository cl = (UserStoriesStateRepository) super.clone();
Vector<UserStories> cloneduserstoriess = new Vector<UserStories>();
for (int i = 0; i < userstoriess.size(); i++) {
cloneduserstoriess.addElement((UserStories)(userstoriess.elementAt(i).clone()));
}
cl.userstoriess = cloneduserstoriess;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(UserStories a)
{
boolean add = true;
for(int i=0; i<userstoriess.size(); i++)
{
UserStories userstories = userstoriess.elementAt(i);
if(userstories.getName().equals(a.getName()))
{
add = false;
break;
}
}
if(add)
{
userstoriess.add(a);
}
}

public UserStories get(String name)
{
for(int i=0; i<userstoriess.size(); i++)
{
if(userstoriess.elementAt(i).getName().equals(name))
{
return userstoriess.elementAt(i);
}
}
return null;
}

public Vector<UserStories> getAll()
{
return userstoriess;
}

public boolean remove(UserStories a)
{
return userstoriess.remove(a);
}
}