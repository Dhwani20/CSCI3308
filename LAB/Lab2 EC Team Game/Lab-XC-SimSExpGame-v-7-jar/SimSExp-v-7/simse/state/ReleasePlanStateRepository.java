/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class ReleasePlanStateRepository implements Cloneable
{
private Vector <ReleasePlan> releaseplans;

public ReleasePlanStateRepository()
{
releaseplans = new Vector<ReleasePlan>();
}

public Object clone() {
try {
ReleasePlanStateRepository cl = (ReleasePlanStateRepository) super.clone();
Vector<ReleasePlan> clonedreleaseplans = new Vector<ReleasePlan>();
for (int i = 0; i < releaseplans.size(); i++) {
clonedreleaseplans.addElement((ReleasePlan)(releaseplans.elementAt(i).clone()));
}
cl.releaseplans = clonedreleaseplans;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(ReleasePlan a)
{
boolean add = true;
for(int i=0; i<releaseplans.size(); i++)
{
ReleasePlan releaseplan = releaseplans.elementAt(i);
if(releaseplan.getName().equals(a.getName()))
{
add = false;
break;
}
}
if(add)
{
releaseplans.add(a);
}
}

public ReleasePlan get(String name)
{
for(int i=0; i<releaseplans.size(); i++)
{
if(releaseplans.elementAt(i).getName().equals(name))
{
return releaseplans.elementAt(i);
}
}
return null;
}

public Vector<ReleasePlan> getAll()
{
return releaseplans;
}

public boolean remove(ReleasePlan a)
{
return releaseplans.remove(a);
}
}