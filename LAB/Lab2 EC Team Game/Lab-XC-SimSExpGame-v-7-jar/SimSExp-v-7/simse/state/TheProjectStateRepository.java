/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class TheProjectStateRepository implements Cloneable
{
private Vector <TheProject> theprojects;

public TheProjectStateRepository()
{
theprojects = new Vector<TheProject>();
}

public Object clone() {
try {
TheProjectStateRepository cl = (TheProjectStateRepository) super.clone();
Vector<TheProject> clonedtheprojects = new Vector<TheProject>();
for (int i = 0; i < theprojects.size(); i++) {
clonedtheprojects.addElement((TheProject)(theprojects.elementAt(i).clone()));
}
cl.theprojects = clonedtheprojects;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(TheProject a)
{
boolean add = true;
for(int i=0; i<theprojects.size(); i++)
{
TheProject theproject = theprojects.elementAt(i);
if(theproject.getName().equals(a.getName()))
{
add = false;
break;
}
}
if(add)
{
theprojects.add(a);
}
}

public TheProject get(String name)
{
for(int i=0; i<theprojects.size(); i++)
{
if(theprojects.elementAt(i).getName().equals(name))
{
return theprojects.elementAt(i);
}
}
return null;
}

public Vector<TheProject> getAll()
{
return theprojects;
}

public boolean remove(TheProject a)
{
return theprojects.remove(a);
}
}