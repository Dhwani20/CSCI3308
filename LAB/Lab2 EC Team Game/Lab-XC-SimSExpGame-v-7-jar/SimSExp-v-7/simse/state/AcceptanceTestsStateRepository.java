/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class AcceptanceTestsStateRepository implements Cloneable
{
private Vector <AcceptanceTests> acceptancetestss;

public AcceptanceTestsStateRepository()
{
acceptancetestss = new Vector<AcceptanceTests>();
}

public Object clone() {
try {
AcceptanceTestsStateRepository cl = (AcceptanceTestsStateRepository) super.clone();
Vector<AcceptanceTests> clonedacceptancetestss = new Vector<AcceptanceTests>();
for (int i = 0; i < acceptancetestss.size(); i++) {
clonedacceptancetestss.addElement((AcceptanceTests)(acceptancetestss.elementAt(i).clone()));
}
cl.acceptancetestss = clonedacceptancetestss;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(AcceptanceTests a)
{
boolean add = true;
for(int i=0; i<acceptancetestss.size(); i++)
{
AcceptanceTests acceptancetests = acceptancetestss.elementAt(i);
if(acceptancetests.getDescription().equals(a.getDescription()))
{
add = false;
break;
}
}
if(add)
{
acceptancetestss.add(a);
}
}

public AcceptanceTests get(String description)
{
for(int i=0; i<acceptancetestss.size(); i++)
{
if(acceptancetestss.elementAt(i).getDescription().equals(description))
{
return acceptancetestss.elementAt(i);
}
}
return null;
}

public Vector<AcceptanceTests> getAll()
{
return acceptancetestss;
}

public boolean remove(AcceptanceTests a)
{
return acceptancetestss.remove(a);
}
}