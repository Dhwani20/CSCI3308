/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;
import simse.adts.objects.*;
import java.util.*;
public class CustomerRepStateRepository implements Cloneable
{
private Vector <CustomerRep> customerreps;

public CustomerRepStateRepository()
{
customerreps = new Vector<CustomerRep>();
}

public Object clone() {
try {
CustomerRepStateRepository cl = (CustomerRepStateRepository) super.clone();
Vector<CustomerRep> clonedcustomerreps = new Vector<CustomerRep>();
for (int i = 0; i < customerreps.size(); i++) {
clonedcustomerreps.addElement((CustomerRep)(customerreps.elementAt(i).clone()));
}
cl.customerreps = clonedcustomerreps;
return cl;
} catch (CloneNotSupportedException c) {
System.out.println(c.getMessage());
}
return null;
}

public void add(CustomerRep a)
{
boolean add = true;
for(int i=0; i<customerreps.size(); i++)
{
CustomerRep customerrep = customerreps.elementAt(i);
if(customerrep.getName().equals(a.getName()))
{
add = false;
break;
}
}
if(add)
{
customerreps.add(a);
}
}

public CustomerRep get(String name)
{
for(int i=0; i<customerreps.size(); i++)
{
if(customerreps.elementAt(i).getName().equals(name))
{
return customerreps.elementAt(i);
}
}
return null;
}

public Vector<CustomerRep> getAll()
{
return customerreps;
}

public boolean remove(CustomerRep a)
{
return customerreps.remove(a);
}
}